{"mappings":"ACEA,IAAM,EAAe,SAAS,gBAAgB,CAAC,eACzC,EAAY,SAAS,aAAa,CAAC,SAEnC,EAAiB,MAAM,IAAI,CAAC,GAAc,GAAG,CAAC,WAAM,MAAA,CAAA,C,GAE1D,EAAa,OAAO,CAAC,SAAC,CAAA,CAAQ,CAA9B,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAU,EAAO,CAAc,CAAC,EAAM,EAEtC,CAAc,CAAC,EAAM,CAAG,CAAC,CAAc,CAAC,EAAM,AAChD,EACF,GAEA,IAAM,EAAY,SAAC,CAAA,CAAe,CAAlC,EACE,IAAM,EAAO,MAAM,IAAI,CAAC,EAAU,gBAAgB,CAAC,OAEnD,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAW,EAAE,QAAQ,CAAC,EAAc,CAAC,WAAW,CAAC,IAAI,GACrD,EAAW,EAAE,QAAQ,CAAC,EAAc,CAAC,WAAW,CAAC,IAAI,GAe3D,OAXI,AAAC,MAAM,IAAc,MAAM,GAEpB,AAAkB,IAAlB,EAIA,AAHO,WAAW,EAAS,OAAO,CAAC,QAAS,KACrC,WAAW,EAAS,OAAO,CAAC,QAAS,KAI5C,EAAS,aAAa,CAAC,GAPvB,WAAW,GAAY,WAAW,EAW/C,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAU,WAAW,CAAC,EACxB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tableHeaders = document.querySelectorAll(\"thead tr th\");\nvar tableBody = document.querySelector(\"tbody\");\nvar sortDirections = Array.from(tableHeaders).map(function() {\n    return true;\n});\ntableHeaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortField(index, sortDirections[index]);\n        sortDirections[index] = !sortDirections[index];\n    });\n});\nvar sortField = function(indexOfColumn, ascending) {\n    var rows = Array.from(tableBody.querySelectorAll(\"tr\"));\n    rows.sort(function(a, b) {\n        var aContent = a.children[indexOfColumn].textContent.trim();\n        var bContent = b.children[indexOfColumn].textContent.trim();\n        var result = 0;\n        if (!isNaN(aContent) && !isNaN(bContent)) result = parseFloat(aContent) - parseFloat(bContent);\n        else if (indexOfColumn === 3) {\n            var salaryA = parseFloat(aContent.replace(/[$,]/g, \"\"));\n            var salaryB = parseFloat(bContent.replace(/[$,]/g, \"\"));\n            result = salaryA - salaryB;\n        } else result = aContent.localeCompare(bContent);\n        return result;\n    });\n    rows.forEach(function(row) {\n        tableBody.appendChild(row);\n    });\n};\n\n//# sourceMappingURL=index.0020215f.js.map\n","'use strict';\n\nconst tableHeaders = document.querySelectorAll('thead tr th');\nconst tableBody = document.querySelector('tbody');\n\nconst sortDirections = Array.from(tableHeaders).map(() => true);\n\ntableHeaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortField(index, sortDirections[index]);\n\n    sortDirections[index] = !sortDirections[index];\n  });\n});\n\nconst sortField = (indexOfColumn, ascending) => {\n  const rows = Array.from(tableBody.querySelectorAll('tr'));\n\n  rows.sort((a, b) => {\n    const aContent = a.children[indexOfColumn].textContent.trim();\n    const bContent = b.children[indexOfColumn].textContent.trim();\n\n    let result = 0;\n\n    if (!isNaN(aContent) && !isNaN(bContent)) {\n      result = parseFloat(aContent) - parseFloat(bContent);\n    } else if (indexOfColumn === 3) {\n      const salaryA = parseFloat(aContent.replace(/[$,]/g, ''));\n      const salaryB = parseFloat(bContent.replace(/[$,]/g, ''));\n\n      result = salaryA - salaryB;\n    } else {\n      result = aContent.localeCompare(bContent);\n    }\n\n    return result;\n  });\n\n  rows.forEach((row) => {\n    tableBody.appendChild(row);\n  });\n};\n"],"names":["tableHeaders","document","querySelectorAll","tableBody","querySelector","sortDirections","Array","from","map","forEach","header","index","addEventListener","sortField","indexOfColumn","ascending","rows","sort","a","b","aContent","children","textContent","trim","bContent","isNaN","salaryA","parseFloat","replace","localeCompare","row","appendChild"],"version":3,"file":"index.0020215f.js.map"}